*20
/SERIALDISK UNIT HANDLER FOR LAP6-DIAL-MS BY ZACHARY KIRTZ
/THIS IS FOR USE WITH THE SERIALDISK
/SERVER PROVIDED WITH OS8DISKSERVER
/
/REVISIONS:
/
/VERSION: A
/DATE: 06-JUN-2025
/BY: ZACHARY KIRTZ
/INITIAL RELEASE
PMODE
*6630		/ENTRY
		/DIAL HANDLERS START AT
		/LOCATION 30
/2ND SERIAL RECEIVE INSTRUCTIONS
KSF2=6401	/SKIP ON FLAG
KCC2=6402	/CLEAR AC & FLAG
KRS2=6404	/READ BUF->AC
KRB2=6406	/READ BUF->AC & CLR FLAG
/
/2ND SERIAL SEND INSTRUCTIONS
TSF2=6411	/SKIP ON FLAG
TCF2=6412	/CLEAR FLAG
TPC2=6414	/AC->PRINT BUF
TLS2=6416	/AC=>PRINT BUF+CLR FLAG
SREAD,	0		/READ ENTRY
	JMP CMN		/JUMP TO CMN ENT
SWRITE,	0
	TAD SWRITE	/CPY WRITE RET 
	DCA SREAD	/TO READ RET
			/FOR EASY ACCESS
	CLA CLL CML RAR	/SET BIT0 WRITE
CMN,			/COMMON ENTRY
	DCA WRFG	/SAVE WRITE FLAG
/USE DISK NUM BITS IN UNIT NUM TO SETUP
/DISK LETTER FOR SERVER
	TAD I SREAD	/GET UNIT NUM
	RTR;RAR		/SHIFT DSK NUM
			/INTO LOW BITS
	AND K7		/MASK OFF UPPER
	TAD KBSCMD	/ADD 1ST DISK
			/LETTER
			/SINCE 1 IS BASE
			/WE ADD "A"-1 TO
			/TO CONVERT TO
			/A DISK LETTER
	JMS SEND	/SEND IT
	ISZ SREAD	/SKIP PAST UNIT
/SETUP BUFFER ADDRESS
	TAD I SREAD 	/GET ADDR
	CLL RTR;RTR;RAR	/SHIFT IT
	AND+0213	/OPTIMIZATION
			/METAGAME
			/GOES HARD
	DCA AADDR	/SAVE ADDR
/SEND OTHER ARGS
	TAD WRFG	/INC WF WITH ADR
	JMS SNDARG	/SEND BUF ADDR
	JMS SNDARG	/SEND BLK NUM
	JMS SNDARG	/SEND BLK CNT
/RECEIVE VALUES BACK
	JMS RECV2	/RECV CDF INST
	DCA SCDF	/SAVE IT
SCDF,	HLT		/CDF AND TMP
	JMS RECV2	/RECV NEG WD CNT
	DCA WDCNT
/RECEIVE ACKNOWLEDGEMENT
SACK,	JMS RECV2	/RECV ACK/NACK
	SNA		/DONE?
	JMP SDONE	/YES? RETURN
	SMA		/NOT R OR W?
	JMP SERR	/YES? ERROR
	CLL RAR		/W BIT IN LINK
	CLA SZL		/W BIT SET?
	JMP SWT		/YES? WRITE
			/NO? READ
/READ ROUTINE
SRD,	JMS RECV2	/RECV WORD
	DCA I AADDR	/SAVE IT
	ISZ AADDR	/INC ADDR
K7,	7		/7 + GUARD WORD
			/HARMLESS AND IF
			/EXECUTED
	ISZ WDCNT	/INC COUNTER
	JMP SRD		/LOOP BACK
	JMP SACK	/DONE? GET ACK
/WRITE ROUTINE
SWT,	TAD I AADDR	/READ WORD
	JMS SEND2	/SEND IT
	ISZ AADDR	/INC ADDR
KBSCMD,	101-1		/GUARD + BASE 
			/DISK LETTER-1
			/HARMLESS AND IF
			/EXECUTED
	ISZ WDCNT	/INC COUNTER
	JMP SWT		/LOOP BACK
	JMP SACK	/DONE? GET ACK
/
/ERROR EXIT
/DIAL DOES NOT HAVE A PROPER ERROR
/RETURN, SO WE WILL JUST HALT BEFORE THE
/NORMAL RETURN TO SIGNIFY THAT CAN ERROR
/HAS OCURRED.
/THE USER MAY CONTINUE, AT THEIR OWN
/RISK, BY PRESSING CONTINUE.
SERR,	HLT
/
/NORMAL EXIT
SDONE,	JMP I SREAD
/
/SEND CURRENT READ ARGUMENT AND INC
SNDARG,	0
	TAD I SREAD
	ISZ SREAD
	/NOP		/GUARD; UNNEEDE
	JMS SEND2
	JMP I SNDARG
/SEND SINGLE 8BIT CHAR
/PARAM[AC] CHARACTER
SEND,	0
	TLS2		/SEND CHAR
	TSF2		/WAIT FOR FINISH
	JMP .-1
	DCA SNDTMP	/SAVE+CLEANUP
	JMP I SEND	/RETURN
/
/SEND 12BIT AS TWO 8BIT
/PARAM[AC] 12BIT
SEND2,	0
	JMS SEND	/SEND BOT 8
	TAD SNDTMP	/GET BACK
	CLL RTR		/GET TOP 4
	RTR;RTR
	JMS SEND	/SEND THEM
			/+ EXTRAS, BUT
			/THIS IS FINE
	JMP I SEND2	/RETURN
/
/RECEIVE SINGLE 12BIT AS TWO 8BIT
/RESULT[AC] 12BIT
RECV2,	0
	KSF2		/GET 1ST 6BIT
	JMP .-1
	KRB2
	CLL RTL		/SHIFT TO UPPER
	RTL;RTL
	DCA RCVTMP	/SAVE EM
	KSF2		/GET 2ND 6BIT
	JMP .-1
	KRB2
	TAD RCVTMP	/ADD TOP 6
	JMP I RECV2	/RETURN
/
/LOCAL VARIABLES
WRFG=SCDF	/WRITE FLAG	
		/REUSE RECV RET
SNDTMP=RECV2	/SEND TEMP WORD
RCVTMP=SEND	/RECV TEMP WORD
WDCNT=SNDARG	/WORD COUNT (NEGATED)
AADDR=SWRITE	/ACCESS ADDRESS
