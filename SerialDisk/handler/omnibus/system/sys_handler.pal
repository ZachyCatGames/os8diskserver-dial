/	SDSKSY OS/8 SYSTEM HANDLER

/	SERIAL INTERFACE-BASED DISK SYSTEM DEVICE HANDLER [USE WITH PC SERVER].

/	LAST EDIT: 06-AUG-2016 CJL

/	EDIT HISTORY.

/	06-AUG-2016	CHARLES LASNER	CODE CLEANUP.

/	NOTABLE CHANGES.

/	1) ADDS THIS EDIT HISTORY.

/	2) REMOVES MINOR INCOMPATIBLE SOURCE CODE QUIRKS.  [NOTE: ALL CHANGES MADE
/	   ARE COSMETIC, BUT TECHNICALLY VIOLATE THE PAL LANGUAGE SPECIFICATION.  OS/8
/	   PAL8 IS DEFICIENT AT FLAGGING CERTAIN ERRORS THAT WILL BE PROPERLY DETECTED
/	   BY OTHER ASSEMBLY PROGRAMS SUCH AS PAL III, P?S/8 PAL, THE LAP6-DIAL/DIAL-MS
/	   ASSEMBLER AND TOPS1O PAL10.]

/	3) REMOVES INCOMPATIBILITY WITH LANGUAGE EXTENSIONS FOUND IN OTHER ASSEMBLERS
/	   [SUCH AS THE ERROR DIRECTIVE].

/	4) REMOVAL OF CONTROL-C DETECTION.  THIS IS A DESIGN FLAW: WHEN CONTROL-C IS
/	   DETECTED, THE KEYBOARD INPUT FLAG IS LEFT SET [WHICH IS THE PROPER ACTION
/	   PER SE].  THE SYSTEM HANDLER WILL BE IMMEDIATELY ENTERED AT 07600 WITH A
/	   CALL TO WRITE OUT A PORTION OF MEMORY TO THE SYSTEM SCRATCH BLOCKS; WHILE
/	   THE KEYBOARD FLAG IS NOT CHECKED DURING THE WRITE OPERATION, THE FLAG IS
/	   STILL SET.  THE NEXT INTERNAL CALL TO THE SYSTEM DEVICE HANDLER IS AN
/	   ATTEMPT TO RELOAD THE KEYBOARD MONITOR [WHICH WOULD DISPOSE OF THE KEYBOARD
/	   FLAG BY VARIOUS APPROPRIATE MEANS AFTER CLEARING THE FLAG]; HOWEVER, SINCE
/	   THIS LATEST CALL IS A READ OPERATION, THE KEYBOARD FLAG IS DETECTED CAUSING
/	   ANOTHER REBOOT TO 07600.  THUS, THE KEYBOARD FLAG IS NEVER CLEARED AS THE
/	   CODE THAT IS DESIGNED TO HANDLE IT NEVER GAINS CONTROL; THIS RESULTS IN AN
/	   INFINITE LOOP SITUATION.  [NOTE: NO OFFICIAL DEC OS/8 SYSTEM HANDLERS CHECK
/	   FOR CONTROL-C; THIS FUNCTION IS AN OPTION FOR NON-SYSTEM HANDLERS ONLY.]

/	5) DEVICE GROUP NAMES MODIFIED FOR CONSISTENCY WITH THE NON-SYSTEM HANDLERS.

/	6) MAJOR SOURCE CODE CLEANUP DEFERRED PENDING TESTING OF THE PROGRAM.  [NOTE:
/	   AMONG OTHER PROBLEMS, THE SOURCE CODE APPEARS TO BE A RECOVERY FROM A
/	   LISTING FILE AND DOES NOT CONFORM TO PDP-8 SOURCE CODE STANDARDS; OTHER THAN
/	   MORE RECENT MINOR EDITS, THERE ARE NO HORIZONTAL TAB CHARACTERS.]

/	7) RELEASE UPDATED TO VERSION F.

/	16-NOV-2015	BOB ADAMSON	FIRST MAJOR UPDATE.

/	NOTE: THIS RELEASE DATE IS APPROXIMATE.  IT IS MORE LIKELY AN EARLY DATE IN A
/	PERIOD THAT SPANS SEVERAL MONTHS.

/	NOTABLE CHANGES:

/	1) REMOVES REDUNDANT CDF INSTRUCTIONS TO SHORTEN THE CODE.

/	2) REPLACES BSW INSTRUCTIONS WITH THREE ROTATE INSTRUCTIONS EACH TO MAINTAIN
/	   COMPATIBILITY WITH ALL "FAMILY OF 8" MACHINES INSTEAD OF OMNIBUS AND NEWER.

/	3) DISABLES INTERRUPTS FROM WITHIN THE HANDLER.

/	4) ADDS CONTROL-C CHECKING TO ABORT TO OS/8 KEYBOARD MONITOR.

/	5) LIMITS CONTROL-C CHECKING TO READ OPERATIONS ONLY TO PREVENT THE SERVER
/	   FROM HANGING.

/	6) RELEASE UPDATED TO VERSION E.

/	17-FEB-2014	KYLE OWEN	INITIAL RELEASE AND UPDATES.

/	NOTABLE FEATURES:

/	1) RUNS ON OMNIBUS MACHINES ONLY.

/	2) HANDLER RELEASED AT VERSION D.

/	3) INCLUDES CO-RESIDENT HANDLER FOR SDB0:.

/	4) INCLUDES CO-RESIDENT HANDLER DUMMY FOR SDA0: [SAME AS SYS].

/	NOTE: AS ALSO APPLIES TO THE OS/8 RK8E SYSTEM HANDLER, THE CO-RESIDENT ENTRY
/	POINTS ONLY FUNCTION AS DESCRIBED IF THE SYSTEM IS BOOTED TO DRIVE UNIT 0.
/	PRESENTLY, THIS RESTRICTION IS SUPERFLUOUS TO THE SERIAL DISK SYSTEM HANDLER
/	AS NO EXTENDED DISK BOOTUP IS CURRENTLY SUPPORTED; HOWEVER, THE RESTRICTIONS
/	SHOULD BE DOCUMENTED SHOULD FUTURE RELEASES SUPPORT ADDITIONAL BOOTUP DRIVES.

VERS="F&77

BASER=6400                      /USING DEVICE CODES 40,41
BASET=6410

SKCF=BASER
SKSF=BASER+1
SKCC=BASER+2
SKRS=BASER+4
SKIE=BASER+5
SKRB=BASER+6

STFL=BASET
STSF=BASET+1
STCF=BASET+2
STPC=BASET+4
STSK=BASET+5
STLS=BASET+6

BLKNUM=6260

/	HANDLER SENDS:

/	A OR B -	COMMAND SERVER, SIDE 0 OR 1
/	<ATSIGN> - 	SEND BOOT CODE

        *0

        -3              /THREE DEVICES (SYSTEM PLUS 2 LOGICAL DISKS)

        DEVICE SDSY; DEVICE SYS ; 4640; ENTRY1&177+2000; 0; BLKNUM
        DEVICE SDSY; DEVICE SDA0; 4640; ENTRY1&177+1000; 0; BLKNUM
        DEVICE SDSY; DEVICE SDB0; 4640; ENTRY2&177+1000; 0; BLKNUM

        BOOT-ENDB		/BOOT CODE LENGTH [NEGATED].

        RELOC 0

BOOT,	CLA			/CLEAN UP NOW.
        TAD I BOOTX1    /COPY FROM 00200-00400 TO 07600-00000
        DCA I BOOTX2
        TAD I BOOTX3    /COPY FROM 00047-00247 TO 17647-10047
        CDF 10
        DCA I BOOTX4
        CDF 0
        TAD BOOTX2
        SZA CLA         /DONE?
        JMP BOOT+1		/NO, KEEP COPYING
	JMP I	B7605/(SBOOT+5)	/JUMP TO OS/8

BOOTX1, 177
BOOTX2, 7577
BOOTX3, 46
BOOTX4, 7646
ADDR,   17
        ZBLOCK 20-.
        CLA CMA         /AC=7777
        DCA ADDR        /SET UP ADDRESS
        TAD BOOTMS      /SEND BOOT MESSAGE TO SERVER
        STLS
        STSF
        JMP .-1
RDLP,   SKCC            /CLEAR AC AND FLAG
        SKSF            /SKIP IF FLAG SET
        JMP .-1
        SKRB            /READ BUFFER
        CLL RTL         /ROTATE 6 LEFT
        RTL
        SPA             /CHANNEL 8 PUNCHED?
        JMP BOOT        /YES, CONTINUE BOOTING
        RTL
        SKSF            /SKIP IF FLAG SET
        JMP .-1
        SKRS            /OR BUFFER WITH AC
        DCA I ADDR      /STORE CONTENTS
        JMP RDLP        /KEEP LOOPING

B7605,  7605            /ADDRESS OF OS/8 ENTRY
BOOTMS, 100             /<AT-SIGN> COMMAND TO SERVER
ENDB,   RELOC

        *200
        RELOC 7600
        ZBLOCK 7
ENTRY1, VERS
        CLA CLL         /CLEAR LINK FOR FIRST PLATTER
SETUP,  TAD WKUP        /ADD WAKEUP CHARACTER
        JMS SENDC       /SEND WAKEUP CHARACTER
        CLA
        SKIE            /NO INTERRUPTS FROM THIS CONSOLE
        RDF             /GET CURRENT FIELD
        TAD SCDI        /ADD CDI
        DCA SFIELD      /DEPOSIT MODIFIED CIF
        TAD I ENTRY1    /GET FUNCTION
        JMS SNDNUM      /TELL SERVER FUNCTION
        ISZ ENTRY1      /LOOK AT BUFFER ADDRESS
        TAD I ENTRY1    /GET BUFFER ADDRESS
        JMS SNDNUM      /TELL SERVER BUFFER ADDRESS
        TAD I ENTRY1    /GET BUFFER ADDRESS
        DCA SLOC        /STORE BUFFER ADDRESS
        ISZ ENTRY1      /LOOK AT STARTING BLOCK NUMBER
        TAD I ENTRY1    /GET STARTING BLOCK NUMBER
        JMS SNDNUM      /TELL SERVER STARTING BLOCK NUMBER
        ISZ ENTRY1      /LOOK AT ERROR RETURN
        JMS GETNUM      /RECEIVE CDF INSTRUCTION
        DCA .+1         /SAVE AND THEN EXECUTE THE CDF
        HLT             /BECOMES CDF TO XFER FIELD
        JMS GETNUM      /RECEIVE NEGATIVE WORD COUNT
        DCA WORDCT
GETACK, JMS GETNUM      /4000=READ, 4001=WRITE, 0000=DONE, 2000=ERROR
        SNA             /WAS IT ZERO?
        JMP EXIT        /YES, EXIT
        CLL RAL         /NO, IS HIGH BIT SET?
        SNL
        JMP SYSERR       /NO, ERROR!
        SZA CLA         /YES, READ OR WRITE?
        JMP TXLP        /TIME TO WRITE

RXLP,   JMS GETNUM      /GET WORD
        DCA I SLOC      /STORE CONTENTS
        ISZ SLOC        /NEXT LOCATION
        KSF             /WE WILL CHECK FOR A ^C
        JMP RXLP1       /NO KEY PRESSED (OR ISZ SKIPPED HERE)
        KRS             /IF HE'S TYPED READ THE KEY
        TAD M203        /^C IS (USUALLY) CODE 203
        CLA/SZA CLA         /WAS IT?
        JMP RXLP1       /WASN'T A ^C
SCDI,   CIF CDF 0
        JMP I S7600
RXLP1,  ISZ WORDCT      /INCREMENT WORD COUNT...DONE?
        JMP RXLP        /NO, KEEP LOOPING
        JMP GETACK      /ANY OTHER REQUESTS?

SLOC,                   /REUSE THIS LOCATION
ENTRY2, VERS            /SECOND ENTRY POINT
        CLA
        TAD ENTRY2      /GET ARGUMENT ADDRESS
        DCA ENTRY1      /STORE IT IN COMMON PLACE
        CLA CLL IAC     /SET AC = 1 FOR 2ND PLATTER
        JMP SETUP       /CONTINUE WITH SETUP

SENDC,  0               /SEND CHARACTER IN AC
        STLS
        STSF
        JMP .-1
        JMP I SENDC
        
SNDNUM, 0               /SEND NUMBER AS TWO CONSECUTIVE CHARACTERS
        JMS SENDC       /SEND BOTTOM 8 BITS OF WORD
        RTR             /NO BSW HERE TO SUIT 8/I ETC
        RTR             /SHIFT TOP BITS DOWN 6
        RTR
        JMS SENDC       /SEND TOP 4 BITS PLUS SOME - LET SERVER HANDLE IT
S7600,  7600            /=CLA, ALSO OS/8 ENTRY POINT
        JMP I SNDNUM

GETNUM, 0
        SKCC            /CLEAR AC AND FLAG
        SKSF            /SKIP IF FLAG SET
        JMP .-1
        SKRB            /READ BUFFER WHICH IS FIRST SIXBIT
        CLL RTL         /SHIFT SIXBIT TO BITS 0-5
        RTL             /NO BSW TO SUIT 8/I ETC
        RTL
        SKSF            /SKIP IF FLAG SET
        JMP .-1         /WHICH WILL BE THE 2ND SIXBIT
        SKRS            /OR WITH AC TO GIVE 12 BIT WORD
        JMP I GETNUM

TXLP,   TAD I SLOC      /GET WORD
        ISZ SLOC        /NEXT LOCATION
        NOP
        JMS SNDNUM      /SEND IT
        ISZ WORDCT      /INCREMENT WORD COUNT...DONE?
        JMP TXLP        /NO, KEEP LOOPING
        JMP GETACK      /ANY MORE REQUESTS?


EXIT,   ISZ ENTRY1      /NORMAL EXIT
SFIELD, HLT             /MODIFIED TO CDI
        JMP I ENTRY1    /EXIT
SYSERR,	CLL CML RAR     /ROTATE ERROR CODE AND SET NEGATIVE BIT
        JMP SFIELD      /ERROR EXIT
        
WORDCT, 0
WKUP,   101
M203,   -203            /^C IS CODE 203
        ZBLOCK 7744-.
        RELOC
$
