   1               /       SDSKSY OS/8 SYSTEM HANDLER
   2               
   3               /       SERIAL INTERFACE-BASED DISK SYSTEM DEVICE HANDLER [USE WITH PC SERVER].
   4               
   5               /       LAST EDIT: 08-FEB-2018 CJL
   6               
   7               /       EDIT HISTORY.
   8               
   9               /       08-FEB-2018     cHARLES LASNER  SMALL CHANGES IN PREPARATION FOR SPEED-UP.
  10               
  11               /       NOTABLE CHANGES.
  12               
  13               /       1) MODIFIES THE 12-BIT WORD SEND AND RECEIVE ROUTINES IN PREPARATION FOR A
  14               /          POTENTIAL FUTURE CHANGE TO SPEED UP THE HANDLER AT THE EXPENSE OF REQUIRING
  15               /          OMNIBUS MACHINES.
  16               
  17               /       2) MINOR COSMETIC CHANGES TO CONFORM TO SOURCE CODE WIDTH LIMITATIONS OF PAL8.
  18               
  19               /       3) RELEASE UPDATED TO VERSION H.
  20               
  21               /       19-NOV-2016     CHARLES LASNER  BUG FIX AND OTHER THINGS.
  22               
  23               /       NOTABLE CHANGES.
  24               
  25               /       1) FIXES BUG ASSOCIATED WITH PRE-OMNIBUS SERIAL INTERFACES.
  26               
  27               /       2) REMOVES LAST REMNANTS OF CONTROL-C CHECKING CODE ALREADY DEACTIVATED.
  28               
  29               /       3) THE EMBEDDED MANUAL BOOTSTRAP CODE IS NOW ONE WORD SHORTER; A WORD THAT IS
  30               /          MERELY READ IN BY RUNNING THE BOOTSTRAP WAS INCLUDED WITHIN THE BOOTSTRAP.
  31               
  32               /       4) THE LONG AWAITED MAJOR SOURCE CODE CLEANUP TO INCLUDE [BETTER] COMMENTS AND
  33               /          CONFORMANCE WITH PDP-8 SOURCE CODE CONVENTIONS.
  34               
  35               /       5) RELEASE UPDATED TO VERSION G.
  36               
  37               /       06-AUG-2016     CHARLES LASNER  CODE CLEANUP.
  38               
  39               /       NOTABLE CHANGES.
  40               
  41               /       1) ADDS THIS EDIT HISTORY.
  42               
  43               /       2) REMOVES MINOR INCOMPATIBLE SOURCE CODE QUIRKS.  [NOTE: ALL CHANGES MADE
  44               /          ARE COSMETIC, BUT TECHNICALLY THE ORIGINAL CODE VIOLATED THE PAL LANGUAGE
  45               /          SPECIFICATION.  OS/8 PAL8 IS DEFICIENT AT FLAGGING CERTAIN ERRORS THAT WILL
  46               /          BE PROPERLY DETECTED BY OTHER ASSEMBLY PROGRAMS SUCH AS PAL III, P?S/8 PAL,
  47               /          THE LAP6-DIAL/DIAL-MS ASSEMBLER AND TOPS1O PAL10.]
  48               
  49               /       3) REMOVES INCOMPATIBILITY WITH LANGUAGE EXTENSIONS FOUND IN OTHER ASSEMBLERS
  50               /          [SUCH AS THE ERROR DIRECTIVE].
  51               /      4) REMOVAL OF CONTROL-C DETECTION.  THIS IS A DESIGN FLAW: WHEN CONTROL-C IS
  52               /          DETECTED, THE KEYBOARD INPUT FLAG IS LEFT SET [WHICH IS THE PROPER ACTION
  53               /          PER SE].  THE SYSTEM HANDLER WILL BE IMMEDIATELY ENTERED AT 07600 WITH A
  54               /          CALL TO WRITE OUT A PORTION OF MEMORY TO THE SYSTEM SCRATCH BLOCKS; WHILE
  55               /          THE KEYBOARD FLAG IS NOT CHECKED DURING THE WRITE OPERATION, THE FLAG IS
  56               /          STILL SET.  THE NEXT INTERNAL CALL TO THE SYSTEM DEVICE HANDLER IS AN
  57               /          ATTEMPT TO RELOAD THE KEYBOARD MONITOR [WHICH WOULD DISPOSE OF THE KEYBOARD
  58               /          FLAG BY VARIOUS APPROPRIATE MEANS AFTER CLEARING THE FLAG]; HOWEVER, SINCE
  59               /          THIS LATEST CALL IS A READ OPERATION, THE KEYBOARD FLAG IS DETECTED CAUSING
  60               /          ANOTHER REBOOT TO 07600.  THUS, THE KEYBOARD FLAG IS NEVER CLEARED AS THE
  61               /          CODE THAT IS DESIGNED TO HANDLE IT NEVER GAINS CONTROL; THIS RESULTS IN AN
  62               /          INFINITE LOOP SITUATION.  [NOTE: NO OFFICIAL DEC OS/8 SYSTEM HANDLERS CHECK
  63               /          FOR CONTROL-C; THIS FUNCTION IS AN OPTION FOR NON-SYSTEM HANDLERS ONLY.]
  64               
  65               /       5) DEVICE GROUP NAMES MODIFIED FOR CONSISTENCY WITH THE NON-SYSTEM HANDLERS.
  66               
  67               /       6) MAJOR SOURCE CODE CLEANUP DEFERRED PENDING TESTING OF THE PROGRAM.  [NOTE:
  68               /          AMONG OTHER PROBLEMS, THE SOURCE CODE APPEARS TO BE A RECOVERY FROM A
  69               /          LISTING FILE AND DOES NOT CONFORM TO PDP-8 SOURCE CODE STANDARDS; OTHER
  70               /          THAN MORE RECENT MINOR EDITS, THERE ARE NO HORIZONTAL TAB CHARACTERS.]
  71               
  72               /       7) RELEASE UPDATED TO VERSION F.
  73               
  74               /       16-NOV-2015     BOB ADAMSON     FIRST MAJOR UPDATE.
  75               
  76               /       NOTE: THIS RELEASE DATE IS APPROXIMATE.  IT IS MORE LIKELY AN EARLY DATE IN A
  77               /       PERIOD THAT SPANS SEVERAL MONTHS.
  78               
  79               /       NOTABLE CHANGES:
  80               
  81               /       1) REMOVES REDUNDANT CDF INSTRUCTIONS TO SHORTEN THE CODE.
  82               
  83               /       2) REPLACES BSW INSTRUCTIONS WITH THREE ROTATE INSTRUCTIONS EACH TO MAINTAIN
  84               /          COMPATIBILITY WITH ALL "FAMILY OF 8" MACHINES INSTEAD OF OMNIBUS AND NEWER.
  85               
  86               /       3) DISABLES INTERRUPTS FROM WITHIN THE HANDLER.
  87               
  88               /       4) ADDS CONTROL-C CHECKING TO ABORT TO OS/8 KEYBOARD MONITOR.
  89               
  90               /       5) LIMITS CONTROL-C CHECKING TO READ OPERATIONS ONLY TO PREVENT THE SERVER
  91               /          FROM HANGING.
  92               
  93               /       6) RELEASE UPDATED TO VERSION E.
  94               
  95               /       17-FEB-2014     KYLE OWEN       INITIAL RELEASE AND UPDATES.
  96               
  97               /       NOTABLE FEATURES:
  98               
  99               /       1) RUNS ON OMNIBUS MACHINES ONLY.
 100               
 101               /       2) HANDLER RELEASED AT VERSION D.
 102               
 103               /       3) INCLUDES CO-RESIDENT HANDLER FOR SDB0:.
 104               /      4) INCLUDES CO-RESIDENT HANDLER DUMMY FOR SDA0: [SAME AS SYS].
 105               
 106               /       NOTE: AS ALSO APPLIES TO THE OS/8 RK8E SYSTEM HANDLER, THE CO-RESIDENT ENTRY
 107               /       POINTS ONLY FUNCTION AS DESCRIBED IF THE SYSTEM IS BOOTED TO DRIVE UNIT 0.
 108               /       PRESENTLY, THIS RESTRICTION IS IRRELEVANT TO THE SERIAL DISK SYSTEM HANDLER AS
 109               /       NO EXTENDED DISK BOOTUP IS CURRENTLY SUPPORTED; HOWEVER, THE RESTRICTIONS
 110               /       SHOULD BE DOCUMENTED SHOULD FUTURE RELEASES SUPPORT ADDITIONAL BOOTUP DRIVES.
 111               
 112               /       NUMERIC LOAD DEFINITIONS.
 113               
 114                       NL7777= CLA CMA                 /LOAD AC WITH 7777.
 115               
 116               /       MISCELLANEOUS DEFINITIONS.
 117               
 118                       BLKNUM= 6260                    /COUNT OF OS/8 RECORDS PER LOGICAL DEVICE.
 119                       DEVCNT= 3                       /THREE LOGICAL DEVICES SUPPORTED.
 120                       SBOOT=  7600                    /STANDARD SYSTEM RESTART ADDRESS.
 121                       VERS=   "H&77                   /RELEASE VERSION.
 122               
 123               /       REMOTE LINE IOT DEFINITIONS.
 124               
 125                       REC=    40                      /DEVICE 40 FOR REMOTE RECEIVE.
 126                       SEN=    41                      /DEVICE CODE 41 FOR REMOTE SEND.
 127               
 128               /       NOTE: DEFINITIONS THAT END WITH ^^^^ IN THE COMMENTS ARE FOR OMNIBUS OR NEWER
 129               /       MACHINES ONLY; EXECUTION MAY PRODUCE UNEXPECTED RESULTS!
 130               
 131               /       RECEIVE DEFINITIONS.
 132               
 133                       RKCC=   REC^10+6002             /CLEAR AC, RECEIVE FLAG.
 134                       RKCF=   REC^10+6000             /CLEAR RECEIVE FLAG ONLY.                  ^^^^
 135                       RKIE=   REC^10+6005             /LOAD INTERRUPT ENABLE PER AC[11].         ^^^^
 136                       RKRB=   REC^10+6006             /LOAD RECEIVE DATA -> AC, CLEAR RECEIVE FLAG.
 137                       RKRS=   REC^10+6004             /LOAD RECEIVE DATA .OR. AC -> AC.
 138                       RKSF=   REC^10+6001             /SKIP IF RECEIVE FLAG SET.
 139               
 140               /       TRANSMIT DEFINITIONS.
 141               
 142                       RSBIOT= SEN^10+6003             /SET BAUD RATE FROM AC[8-11].              ^^^^
 143                       RTCF=   SEN^10+6002             /CLEAR TRANSMIT FLAG.
 144                       RTFL=   SEN^10+6000             /SET TRANSMIT FLAG.                        ^^^^
 145                       RTLS=   SEN^10+6006             /SEND TRANSMIT CHARACTER, CLEAR FLAG.
 146                       RTPC=   SEN^10+6004             /SEND TRANSMIT CHARACTER.
 147                       RTSF=   SEN^10+6001             /SKIP ON TRANSMIT FLAG SET.
 148                       RTSK=   SEN^10+6005             /SKIP IF TRANSIT FLAG OR RECEIVE FLAG SET. ^^^^
 149               
 150               /       TO DIFFERENTIATE BETWEEN LOGICAL DISK REGIONS, THE HANDLER SENDS AN
 151               /       INITIATING CHARACTER:
 152               
 153               /       ASCII TEXT CHARACTER    DISK REGION
 154               
 155               /               A               DISK 0 FIRST HALF.
 156               /               B               DISK 0 SECOND HALF.
 157               
 158               /               <ATSIGN>        SEND BOOT CODE BY SPECIAL PROTOCOL.
 159                      *0                              /HANDLER BLOCK STARTS HERE.
 160               
 161 000000  7775          -DEVCNT                         /DEVICE HANDLER COUNT.
 162               
 163 000001  2304          DEVICE  SDSY;DEVICE  SYS; 4640;SYSENT&177+2000;0;BLKNUM
     000002  2331  
     000003  2331  
     000004  2300  
     000005  4640  
     000006  2007  
     000007  0000  
     000010  6260  
 164 000011  2304          DEVICE  SDSY;DEVICE  SDA0;4640;SYSENT&177+1000;0;BLKNUM
     000012  2331  
     000013  2304  
     000014  0160  
     000015  4640  
     000016  1007  
     000017  0000  
     000020  6260  
 165 000021  2304          DEVICE  SDSY;DEVICE  SDB0;4640;ENTRY2&177+1000;0;BLKNUM
     000022  2331  
     000023  2304  
     000024  0260  
     000025  4640  
     000026  1060  
     000027  0000  
     000030  6260  
 166               
 167 000031  7732          BOOT-ENDB                       /BOOT CODE LENGTH [NEGATED].
 168               
 169                       RELOC   0                       /WHERE THIS LOADS.
 170               
 171               /       WHEN CONTROL IS TRANSFERRED HERE, THE SYSTEM DEVICE HANDLER IS IN 00200-00377
 172               /       AND THE CODE TO BE LOADED INTO 17647-17777 IS IN 00047-0177.  WE CAN BE
 173               /       SLOPPY AND COPY A FEW EXTRA WORDS PAST WHAT IS NEEDED [WASTES A FEW MS.].
 174               
 175 000000* 7200  BOOT,   CLA                             /CLEAN UP.
 176 000001* 1413          TAD I   BTXR13                  /GET A WORD FROM 0200 AND ONWARD.
 177 000002* 3414          DCA I   BTXR14                  /STORE INTO 07600 AND ONWARD.
 178 000003* 1415          TAD I   BTXR15                  /GET A WORD FROM 0047 AND ONWARD.
 179 000004* 6211          CDF     10                      /STORING INTO FIELD 1.
 180 000005* 3416          DCA I   BTXR16                  /STORE INTO 17647 AND ONWARD.
 181 000006* 6201          CDF     00                      /BACK TO FIELD 0.
 182 000007* 1014          TAD     BTXR14                  /GET HANDLER CODE POINTER.
 183 000010* 7640          SZA CLA                         /SKIP IF WE WENT TOO FAR.
 184 000011* 5001          JMP     BOOT+1                  /GO BACK AND DO MORE.
 185 000012* 5445          JMP I   B7605/(SBOOT+5)         /DONE, GO START UP OS/8.
 186               /      AUTO-INDEX REGISTERS; ALL MUST BE IN THE RANGE OF 0013-0017.
 187               
 188                       IFNZRO  13-.    <ERROR  .>      /POINTERS ASSEMBLED WRONG IF THIS HAPPENS.
 189               
 190 000013* 0177  BTXR13, 0200-1                          /CURRENT POINTER TO SYSTEM HANDLER CODE.
 191 000014* 7577  BTXR14, SBOOT-1                         /WHERE SYSTEM HANDLER CODE MUST GO.
 192 000015* 0046  BTXR15, 47-1                            /CURRENT POINTER TO FIELD 1 CODE [IN FIELD 0].
 193 000016* 7646  BTXR16, 7647-1                          /WHERE THE FIELD 1 CODE MUST GO.
 194 000017* 0017  STXR17, .                               /BOOTUP STORE POINTER; MUST POINT TO ITSELF.
 195               
 196                       ZBLOCK  20-.                    /EMPTY SPACE [IF ANY].
 197               
 198               /       WHAT FOLLOWS IS ACTUALLY THE BOOTUP CODE [BUT ALSO EMBEDDED HERE].
 199               
 200 000020* 7240  BUTUP,  NL7777                          /SET AC TO 0000 LESS AUTO-INDEX BACKUP FACTOR.
 201 000021* 3017          DCA     STXR17                  /STASH THE POINTER.
 202 000022* 1044          TAD     BOOTMSG/(100)           /SETUP SERVER COMMAND BOOT VALUE.
 203 000023* 6416          RTLS                            /SEND IT.
 204 000024* 6411          RTSF                            /DONE YET?
 205 000025* 5024          JMP     .-1                     /NO, WAIT FOR IT.
 206 000026* 6402  BTLP,   RKCC                            /CLEAR THE FLAG AND THE AC.
 207 000027* 6401          RKSF                            /FLAG UP?
 208 000030* 5027          JMP     .-1                     /NO, WAIT FOR IT.
 209 000031* 6406          RKRB                            /YES, READ IN THE FIRST CHARACTER.
 210 000032* 7106          CLL RTL;RTL                     /MOVE UP.
     000033* 7006  
 211 000034* 7510          SPA                             /SKIP IF NOT END OF DATA.
 212 000035* 5000          JMP     BOOT                    /ALL DATA IN, NOW GO START IT UP.
 213 000036* 7006          RTL                             /NO HAVE FIRST HALF IN HIGH-ORDER.
 214 000037* 6401          RKSF                            /FLAG UP?
 215 000040* 5037          JMP     .-1                     /NO, WAIT FOR IT.
 216 000041* 6404          RKRS                            /.OR. IN THE LOW-ORDER HALF.
 217 000042* 3417          DCA I   STXR17                  /STORE THE LATEST WORD.
 218 000043* 5026          JMP     BTLP                    /KEEP GOING.
 219               
 220 000044* 0100  BOOTMS, "A&177-1                        /BOOTUP CHARACTER.
 221               
 222               /       THE STANDALONE BOOTSTRAP IS ALL WORDS FROM 0020 THROUGH HERE.
 223               
 224                       ENDBUT= .                       /END OF MANUAL BOOTSTRAP.
 225               
 226 000045* 7605  B7605,  SBOOT+5                         /WHERE OS/8 STARTS WITHOUT WRITING.
 227               
 228                       ENDB=   .                       /END OF BOOT CODE.
 229               
 230                       RELOC                           /TURN OFF RELOCATION FOR NOW.
 231                      *200                            /THIS IS WHERE THE SYSTEM HANDLER LOADS.
 232               
 233                       RELOC   SBOOT                   /THIS IS WHERE IT EXECUTES.
 234               
 235 007600* 0000          ZBLOCK  SBOOT+7-.               /BUILD WILL FILL THIS IN.
     007601* 0000  
     007602* 0000  
     007603* 0000  
     007604* 0000  
     007605* 0000  
     007606* 0000  
 236               
 237               /       THIS IS THE ENTRY FOR THE SYSTEM DEVICE [AND THE CO-RESIDENT SDA0: HANDLER].
 238               
 239 007607* 0010  SYSENT, VERS                            /ENTRY POINT; BUILD WANTS THE VERSION HERE.
 240 007610* 7300          CLA CLL                         /CLEAN UP.
 241 007611* 1217  SETUP1, TAD     WKUP/("A&177-1)         /GET [OR ADD] INITIAL DRIVE CHARACTER.
 242 007612* 4266          JMS     SENDC                   /TELL IT TO THE SERVER.
 243 007613* 6214          RDF                             /GET CALLER'S FIELD.
 244 007614* 1334          TAD     SCDI/(CIF CDF 00)       /TURN INTO "CIF CDF" TO CALLER'S FIELD.
 245 007615* 3330          DCA     SFIELD                  /STORE IN-LINE FOR RETURN LATER.
 246 007616* 6405          RKIE                            /CLEAR INTERRUPTS FROM THIS DEVICE.
 247 007617* 0101  WKUP,   "A&177                          /CONSTANT 0101; ALSO HARMLESS "AND" INSTRUCTION.
 248 007620* 7200          CLA                             /MAKE SURE AC IS CLEAR.
 249 007621* 1607          TAD I   SYSENT                  /GET THE FUNCTION WORD.
 250 007622* 4274          JMS     SNDNUM                  /SEND IT TO THE SERVER.
 251 007623* 2207          ISZ     SYSENT                  /BUMP PAST FUNCTION WORD.
 252 007624* 1607          TAD I   SYSENT                  /GET THE CALLER'S BUFFER ADDRESS.
 253 007625* 4274          JMS     SNDNUM                  /TELL IT TO THE SERVER [THIS COULD GO AWAY].
 254 007626* 1607          TAD I   SYSENT                  /GET THE CALLER'S BUFFER ADDRESS AGAIN.
 255 007627* 3260          DCA     SLOC                    /STORE FOR TRANSFERS LATER.
 256 007630* 2207          ISZ     SYSENT                  /BUMP TO RECORD ARGUMENT.
 257 007631* 1607          TAD I   SYSENT                  /GET THE STARTING RECORD NUMBER.
 258 007632* 4274          JMS     SNDNUM                  /SET TO SERVER.
 259 007633* 2207          ISZ     SYSENT                  /BUMP TO ERROR RETURN.
 260 007634* 4304          JMS     GETNUM                  /GET "CDF" TO BUFFER FIELD FROM SERVER.
 261 007635* 3236          DCA     .+1                     /STORE INLINE.
 262 007636* 7402          HLT                             /CHANGE DATA FIELD TO USER'S BUFFER FIELD.
 263 007637* 4304          JMS     GETNUM                  /GET NEGATED WORD COUNT FROM SERVER.
 264 007640* 3335          DCA     WORDCT                  /STASH IT.
 265 007641* 4304  GETACK, JMS     GETNUM                  /GET STATUS FROM SERVER.
 266 007642* 7450          SNA                             /ARE WE DONE? [0000 IS GOOD COMPLETION CODE.]
 267 007643* 5327          JMP     EXIT                    /YES, TAKE GOOD EXIT NOW.
 268 007644* 7104          CLL RAL                         /MOVE UP TO LINK AND AC[0].
 269 007645* 7420          SNL                             /SKIP IF READ OR WRITE.
 270 007646* 5332          JMP     SYSERR                  /JUMP IF THERE WAS AN ERROR [CODE 2000].
 271 007647* 7640          SZA CLA                         /SKIP IF READING [4000].
 272 007650* 5320          JMP     TXLP                    /JUMP IF WE ARE WRITING [4001].
 273               /      FALLS THROUGH IF READING.  GET THE DATA FROM THE SERVER AND STORE INTO THE
 274               /       USER'S BUFFER.
 275               
 276 007651* 4304  RXLP,   JMS     GETNUM                  /GET A WORD FROM THE SERVER.
 277 007652* 3660          DCA I   SLOC                    /PUT A WORD INTO THE BUFFER.
 278 007653* 2260          ISZ     SLOC                    /BUMP UP THE BUFFER POINTER.
 279 007654* 7000          NOP                             /IN CASE IT SKIPS.
 280 007655* 2335          ISZ     WORDCT                  /DONE ENOUGH WORDS?
 281 007656* 5251          JMP     RXLP                    /NO, KEEP GOING.
 282 007657* 5241          JMP     GETACK                  /GET THE FINAL STATUS BEFORE EXITING.
 283               
 284 007660* 0010  ENTRY2, VERS                            /ENTRY POINT FOR "B" SIDE.
 285               
 286                       SLOC=   .-1                     /ALSO USED AS STORAGE POINTER.
 287               
 288 007661* 7200          CLA                             /CLEAN UP.
 289 007662* 1260          TAD     ENTRY2                  /GET OUR CALLER.
 290 007663* 3207          DCA     SYSENT                  /MAKE IT THEIRS.
 291 007664* 7301          CLA CLL IAC                     /SET AC TO 1 FOR "B" SIDE OFFSET.
 292 007665* 5211          JMP     SETUP1                  /CONTINUE THERE.
 293               
 294 007666* 0000  SENDC,  .-.                             /TRANSMIT A CHARACTER ROUTINE.
 295 007667* 6416          RTLS                            /SEND THE CHARACTER IN THE AC.
 296 007670* 6411          RTSF                            /SEND FLAG UP?
 297 007671* 5270          JMP     .-1                     /NO, WAIT FOR IT.
 298 007672* 3304          DCA     SNDTMP                  /CLEAN UP AND SAVE FOR SOME CALLERS.
 299 007673* 5666          JMP I   SENDC                   /YES, RETURN TO CALLER WITH AC INTACT.
 300               
 301 007674* 0000  SNDNUM, .-.                             /SEND C(AC) AS TWO CHARACTERS ROUTINE.
 302 007675* 4266          JMS     SENDC                   /SEND LOW-ORDER 8 BITS.
 303 007676* 1304          TAD     SNDTMP                  /GET THEM BACK.
 304 007677* 7012          RTR;RTR;RTR                     /MOVE DOWN HIGH-ORDER BITS.
     007700* 7012  
     007701* 7012  
 305 007702* 4266          JMS     SENDC                   /SEND HIGH-ORDER BITS [AND SOME JUNK BITS].
 306 007703* 5674          JMP I   SNDNUM                  /RETURN TO CALLER.
 307               
 308 007704* 0000  GETNUM, .-.                             /RECEIVE 12-BIT WORD IN TWO CHARACTERS ROUTINE.
 309               
 310                       SNDTMP= .-1                     /ALSO USED AS STORAGE TEMPORARY.
 311               
 312 007705* 6402          RKCC                            /CLEAR THE RECEIVE FLAG, AC.
 313 007706* 6401          RKSF                            /RECEIVE FLAG UP?
 314 007707* 5306          JMP     .-1                     /NO, WAIT FOR IT.
 315 007710* 6406          RKRB                            /YES, READ IN FIRST SIXBIT CHARACTER.
 316 007711* 7106          CLL RTL;RTL;RTL                 /MOVE UP TO HIGH-ORDER BITS.
     007712* 7006  
     007713* 7006  
 317 007714* 6401          RKSF                            /RECEIVE FLAG UP?
 318 007715* 5314          JMP     .-1                     /NO, WAIT FOR IT.
 319 007716* 6404          RKRS                            /.OR. SECOND SIXBIT CHARACTER INTO AC.
 320 007717* 5704          JMP I   GETNUM                  /RETURN TO CALLER.
 321               /      COMES HERE IF WRITING.  GET THE DATA FROM THE USER'S BUFFER AND SEND IT TO THE
 322               /       SERVER.
 323               
 324 007720* 1660  TXLP,   TAD I   SLOC                    /GET A WORD FROM THE USER'S BUFFER.
 325 007721* 2260          ISZ     SLOC                    /BUMP TO NEXT LOCATION.
 326 007722* 7000          NOP                             /HERE IN CASE IT SKIPS.
 327 007723* 4274          JMS     SNDNUM                  /SEND THE WORD TO THE SERVER.
 328 007724* 2335          ISZ     WORDCT                  /DONE ENOUGH WORDS?
 329 007725* 5320          JMP     TXLP                    /NO, KEEP GOING.
 330 007726* 5241          JMP     GETACK                  /GET THE FINAL STATUS BEFORE EXITING.
 331               
 332               /       COMES HERE FOR SUCCESSFUL EXIT TO CALLER.
 333               
 334 007727* 2207  EXIT,   ISZ     SYSENT                  /BUMP TO NORMAL RETURN.
 335 007730* 7402  SFIELD, HLT                             /THIS WILL BE "CIF CDF" TO CALLER'S FIELD.
 336 007731* 5607          JMP I   SYSENT                  /TAKE GOOD RETURN TO CALLER.
 337               
 338               /       COMES HERE IF THERE WAS AN ERROR.
 339               
 340 007732* 7130  SYSERR, STL RAR                         /FORCE ERROR CONDITION, MOVE DOWN STATUS BITS.
 341 007733* 5330          JMP     SFIELD                  /TAKE ERROR RETURN.
 342               
 343 007734* 6203  SCDI,   CIF CDF 00                      /CONSTANT 6203.
 344 007735* 0000  WORDCT, .-.                             /WORD COUNT FOR DATA TRANSFER.
 345               
 346 007736* 0000          ZBLOCK  7744-.                  /EMPTY SPACE.
     007737* 0000  
     007740* 0000  
     007741* 0000  
     007742* 0000  
     007743* 0000  
 347               
 348                       RELOC                           /TURN OFF RELOCATION.
 349               
 350                       $                               /THAT'S ALL, FOLK!

B7605   0045
BLKNUM  6260
BOOT    0000
BOOTMS  0044
BTLP    0026
BTXR13  0013
BTXR14  0014
BTXR15  0015
BTXR16  0016
BUTUP   0020 unreferenced
DEVCNT  0003
ENDB    0046
ENDBUT  0045 unreferenced
ENTRY2  7660
EXIT    7727
GETACK  7641
GETNUM  7704
NL7777  7240
REC     0040
RKCC    6402
RKCF    6400 unreferenced
RKIE    6405
RKRB    6406
RKRS    6404
RKSF    6401
RSBIOT  6413 unreferenced
RTCF    6412 unreferenced
RTFL    6410 unreferenced
RTLS    6416
RTPC    6414 unreferenced
RTSF    6411
RTSK    6415 unreferenced
RXLP    7651
SBOOT   7600
SCDI    7734
SEN     0041
SENDC   7666
SETUP1  7611
SFIELD  7730
SLOC    7660
SNDNUM  7674
SNDTMP  7704
STXR17  0017
SYSENT  7607
SYSERR  7732
TXLP    7720
VERS    0010
WKUP    7617
WORDCT  7735
