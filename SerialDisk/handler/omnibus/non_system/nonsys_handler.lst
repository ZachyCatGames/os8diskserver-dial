   1               /       SDSKNS OS/8 NON-SYSTEM HANDLER
   2               
   3               /       SERIAL INTERFACE-BASED DISK NON-SYSTEM DEVICE HANDLER [USE WITH PC SERVER].
   4               
   5               /       LAST EDIT: 08-FEB-2018 CJL
   6               
   7               /       EDIT HISTORY.
   8               
   9               /       08-FEB-2018     cHARLES LASNER  SMALL CHANGES IN PREPARATION FOR SPEED-UP.
  10               
  11               /       NOTABLE CHANGES.
  12               
  13               /       1) MODIFIES THE 12-BIT WORD SEND AND RECEIVE ROUTINES IN PREPARATION FOR A
  14               /          POTENTIAL FUTURE CHANGE TO SPEED UP THE HANDLER AT THE EXPENSE OF REQUIRING
  15               /          OMNIBUS MACHINES.
  16               
  17               /       2) MINOR COSMETIC CHANGES TO CONFORM TO SOURCE CODE WIDTH LIMITATIONS OF PAL8.
  18               
  19               /       3) RELEASE UPDATED TO VERSION H.
  20               
  21               /       13-NOV-2016     CHARLES LASNER  BUG FIX AND MAJOR SOURCE CODE CLEANUP.
  22               
  23               /       NOTABLE CHANGES.
  24               
  25               /       1) FIXES BUG ASSOCIATED WITH PRE-OMNIBUS SERIAL INTERFACES BY REORDERING THE
  26               /          CODE THUS OVERALL LENGTH IS UNCHANGED.
  27               
  28               /       2) THE LONG AWAITED MAJOR SOURCE CODE CLEANUP TO INCLUDE [BETTER] COMMENTS AND
  29               /          CONFORMANCE WITH PDP-8 SOURCE CODE CONVENTIONS.
  30               
  31               /       6) RELEASE UPDATED TO VERSION G.
  32               
  33               /       06-AUG-2016     CHARLES LASNER  CODE CLEANUP.
  34               
  35               /       NOTABLE CHANGES.
  36               
  37               /       1) ADDS THIS EDIT HISTORY.
  38               
  39               /       2) REMOVES MINOR INCOMPATIBLE SOURCE CODE QUIRKS.  [NOTE: ALL CHANGES MADE
  40               /          ARE COSMETIC, BUT TECHNICALLY THE ORIGINAL CODE VIOLATED THE PAL LANGUAGE
  41               /          SPECIFICATION.  OS/8 PAL8 IS DEFICIENT AT FLAGGING CERTAIN ERRORS THAT WILL
  42               /          BE PROPERLY DETECTED BY OTHER ASSEMBLY PROGRAMS SUCH AS PAL III, P?S/8 PAL,
  43               /          THE LAP6-DIAL/DIAL-MS ASSEMBLER AND TOPS1O PAL10.]
  44               
  45               /       3) REMOVES INCOMPATIBILITY WITH LANGUAGE EXTENSIONS FOUND IN OTHER ASSEMBLERS
  46               /          [SUCH AS THE ERROR DIRECTIVE].
  47               
  48               /       4) DEVICE GROUP NAMES ARE MODIFIED FOR CONSISTENCY WITH THE SYSTEM HANDLER.
  49               
  50               /       5) MAJOR SOURCE CODE CLEANUP DEFERRED PENDING TESTING OF THE PROGRAM.  [NOTE:
  51               /          AMONG OTHER PROBLEMS, THE SOURCE CODE APPEARS TO BE A RECOVERY FROM A
  52               /          LISTING FILE AND DOES NOT CONFORM TO PDP-8 SOURCE CODE STANDARDS; OTHER
  53               /          THAN MORE RECENT MINOR EDITS, THERE ARE NO HORIZONTAL TAB CHARACTERS.]
  54               
  55               /       6) RELEASE UPDATED TO VERSION F.
  56               /      16-NOV-2015     BOB ADAMSON     FIRST MAJOR UPDATE.
  57               
  58               /       NOTE: THIS RELEASE DATE IS APPROXIMATE.  IT IS MORE LIKELY AN EARLY DATE IN A
  59               /       PERIOD THAT SPANS SEVERAL MONTHS.
  60               
  61               /       NOTABLE CHANGES:
  62               
  63               /       1) REMOVES REDUNDANT CDF INSTRUCTIONS TO SHORTEN THE CODE.
  64               
  65               /       2) REPLACES BSW INSTRUCTIONS WITH THREE ROTATE INSTRUCTIONS EACH TO MAINTAIN
  66               /          COMPATIBILITY WITH ALL "FAMILY OF 8" MACHINES INSTEAD OF OMNIBUS AND NEWER.
  67               
  68               /       3) DISABLES INTERRUPTS FROM WITHIN THE HANDLER.
  69               
  70               /       4) ADDS CONTROL-C CHECKING TO ABORT TO OS/8 KEYBOARD MONITOR.
  71               
  72               /       5) LIMITS CONTROL-C CHECKING TO READ OPERATIONS ONLY TO PREVENT THE SERVER
  73               /          FROM HANGING.
  74               
  75               /       6) SUPPORT NOW EXTENDED TO FOUR DISKS [REQUIRES UPDATED SERVER SOFTWARE].
  76               
  77               /       7) RELEASE UPDATED TO VERSION E.
  78               
  79               /       17-FEB-2014     KYLE OWEN       INITIAL RELEASE AND UPDATES.
  80               
  81               /       NOTABLE FEATURES:
  82               
  83               /       1) RUNS ON OMNIBUS MACHINES ONLY.
  84               
  85               /       2) HANDLES TWO DISKS.
  86               
  87               /       3) HANDLER RELEASED AT VERSION D.
  88               
  89               /       NUMERIC LOAD DEFINITIONS.
  90               
  91                       NL2000= CLA CLL CML RTR         /LOAD AC WITH 2000.
  92               
  93               /       MISCELLANEOUS DEFINITIONS.
  94               
  95                       BLKNUM= 6260                    /COUNT OF OS/8 RECORDS PER LOGICAL DEVICE.
  96                       DEVCNT= 10                      /EIGHT LOGICAL DEVICES SUPPORTED.
  97                       VERS=   "H&77                   /RELEASE VERSION.
  98               /      REMOTE LINE IOT DEFINITIONS.
  99               
 100                       REC=    40                      /DEVICE 40 FOR REMOTE RECEIVE.
 101                       SEN=    41                      /DEVICE CODE 41 FOR REMOTE SEND.
 102               
 103               /       NOTE: DEFINITIONS THAT END WITH ^^^^ IN THE COMMENTS ARE FOR OMNIBUS OR NEWER
 104               /       MACHINES ONLY; EXECUTION MAY PRODUCE UNEXPECTED RESULTS!
 105               
 106               /       RECEIVE DEFINITIONS.
 107               
 108                       RKCC=   REC^10+6002             /CLEAR AC, RECEIVE FLAG.
 109                       RKCF=   REC^10+6000             /CLEAR RECEIVE FLAG ONLY.                   ^^^^
 110                       RKIE=   REC^10+6005             /LOAD INTERRUPT ENABLE PER AC[11].          ^^^^
 111                       RKRB=   REC^10+6006             /LOAD RECEIVE DATA -> AC, CLEAR RECEIVE FLAG.
 112                       RKRS=   REC^10+6004             /LOAD RECEIVE DATA .OR. AC -> AC.
 113                       RKSF=   REC^10+6001             /SKIP IF RECEIVE FLAG SET.
 114               
 115               /       TRANSMIT DEFINITIONS.
 116               
 117                       RSBIOT= SEN^10+6003             /SET BAUD RATE FROM AC[8-11].               ^^^^
 118                       RTCF=   SEN^10+6002             /CLEAR TRANSMIT FLAG.
 119                       RTFL=   SEN^10+6000             /SET TRANSMIT FLAG.                         ^^^^
 120                       RTLS=   SEN^10+6006             /SEND TRANSMIT CHARACTER, CLEAR FLAG.
 121                       RTPC=   SEN^10+6004             /SEND TRANSMIT CHARACTER.
 122                       RTSF=   SEN^10+6001             /SKIP ON TRANSMIT FLAG SET.
 123                       RTSK=   SEN^10+6005             /SKIP IF TRANSIT FLAG OR RECEIVE FLAG SET.  ^^^^
 124               
 125               /       TO DIFFERENTIATE BETWEEN LOGICAL DISK REGIONS, THE HANDLER SENDS AN
 126               /       INITIATING CHARACTER:
 127               
 128               /       ASCII TEXT CHARACTER    DISK REGION
 129               
 130               /               A               DISK 0 FIRST HALF.
 131               /               B               DISK 0 SECOND HALF.
 132               /               C               DISK 1 FIRST HALF.
 133               /               D               DISK 1 SECOND HALF.
 134               /               E               DISK 2 FIRST HALF.
 135               /               F               DISK 2 SECOND HALF.
 136               /               G               DISK 3 FIRST HALF.
 137               /               H               DISK 3 SECOND HALF.
 138                      *0                              /HANDLER BLOCK STARTS HERE.
 139               
 140 000000  7770          -DEVCNT                         /DEVICE HANDLER COUNT.
 141               
 142 000001  2304          DEVICE  SDNS;DEVICE  SDA0;4640;SDA0&177;0;0
     000002  1623  
     000003  2304  
     000004  0160  
     000005  4640  
     000006  0054  
     000007  0000  
     000010  0000  
 143 000011  2304          DEVICE  SDNS;DEVICE  SDB0;4640;SDB0&177;0;0
     000012  1623  
     000013  2304  
     000014  0260  
     000015  4640  
     000016  0053  
     000017  0000  
     000020  0000  
 144 000021  2304          DEVICE  SDNS;DEVICE  SDA1;4640;SDA1&177;0;0
     000022  1623  
     000023  2304  
     000024  0161  
     000025  4640  
     000026  0052  
     000027  0000  
     000030  0000  
 145 000031  2304          DEVICE  SDNS;DEVICE  SDB1;4640;SDB1&177;0;0
     000032  1623  
     000033  2304  
     000034  0261  
     000035  4640  
     000036  0051  
     000037  0000  
     000040  0000  
 146 000041  2304         DEVICE  SDNS;DEVICE  SDA2;4640;SDA2&177;0;0
     000042  1623  
     000043  2304  
     000044  0162  
     000045  4640  
     000046  0050  
     000047  0000  
     000050  0000  
 147 000051  2304          DEVICE  SDNS;DEVICE  SDB2;4640;SDB2&177;0;0
     000052  1623  
     000053  2304  
     000054  0262  
     000055  4640  
     000056  0047  
     000057  0000  
     000060  0000  
 148 000061  2304          DEVICE  SDNS;DEVICE  SDA3;4640;SDA3&177;0;0
     000062  1623  
     000063  2304  
     000064  0163  
     000065  4640  
     000066  0046  
     000067  0000  
     000070  0000  
 149 000071  2304          DEVICE  SDNS;DEVICE  SDB3;4640;SDB3&177;0;0
     000072  1623  
     000073  2304  
     000074  0263  
     000075  4640  
     000076  0045  
     000077  0000  
     000100  0000  
 150                      *200                            /CODE DEFINED HERE.
 151               
 152 000200  0000  SENDC,  .-.                             /TRANSMIT A CHARACTER ROUTINE.
 153 000201  6416          RTLS                            /SEND THE CHARACTER IN THE AC.
 154 000202  6411          RTSF                            /SEND FLAG UP?
 155 000203  5202          JMP     .-1                     /NO, WAIT FOR IT.
 156 000204  3216          DCA     SNDTMP                  /CLEAN UP AND SAVE FOR SOME CALLERS.
 157 000205  5600          JMP I   SENDC                   /YES, RETURN TO CALLER WITH AC INTACT.
 158               
 159 000206  0000  SNDNUM, .-.                             /SEND C(AC) AS TWO CHARACTERS ROUTINE.
 160 000207  4200          JMS     SENDC                   /SEND LOW-ORDER 8 BITS.
 161 000210  1216          TAD     SNDTMP                  /GET THEM BACK.
 162 000211  7012          RTR;RTR;RTR                     /MOVE DOWN HIGH-ORDER BITS.
     000212  7012  
     000213  7012  
 163 000214  4200          JMS     SENDC                   /SEND HIGH-ORDER BITS [AND SOME JUNK BITS].
 164 000215  5606          JMP I   SNDNUM                  /RETURN TO CALLER.
 165               
 166 000216  0000  GETNUM, .-.                             /RECEIVE 12-BIT WORD IN TWO CHARACTERS ROUTINE.
 167               
 168                       SNDTMP= .-1                     /ALSO USED AS STORAGE TEMPORARY.
 169               
 170 000217  6402          RKCC                            /CLEAR THE RECEIVE FLAG, AC.
 171 000220  6401          RKSF                            /RECEIVE FLAG UP?
 172 000221  5220          JMP     .-1                     /NO, WAIT FOR IT.
 173 000222  6406          RKRB                            /YES, READ IN FIRST SIXBIT CHARACTER.
 174 000223  7106          CLL RTL;RTL;RTL                 /MOVE UP TO HIGH-ORDER BITS.
     000224  7006  
     000225  7006  
 175 000226  6401          RKSF                            /RECEIVE FLAG UP?
 176 000227  5226          JMP     .-1                     /NO, WAIT FOR IT.
 177 000230  6404          RKRS                            /.OR. SECOND SIXBIT CHARACTER INTO AC.
 178 000231  5616          JMP I   GETNUM                  /RETURN TO CALLER.
 179               
 180 000232  0000  CTRLC,  .-.                             /CONTROL-C CHECK ROUTINE.
 181 000233  7600  S7600,  CLA!400                         /CLEAR AC; ALSO CONSTANT 7600.
 182 000234  6031          KSF                             /KEYBOARD FLAG UP?
 183 000235  5632          JMP I   CTRLC                   /NO, RETURN NOW.
 184 000236  6034          KRS                             /YES, GET THE LATEST CHARACTER.
 185 000237  0264          AND     S177/(177)              /REMOVE PARITY BIT.
 186 000240  1363          TAD     M3/(-3)                 /COMPARE TO CONTROL-C.
 187 000241  7640          SZA CLA                         /SKIP IF IT MATCHES.
 188 000242  5632          JMP I   CTRLC                   /RETURN IF DIFFERENT FROM CONTROL-C.
 189 000243  6203  SCDI,   CIF CDF 00                      /GOING TO FIELD 0 ON ABORT.
 190 000244  5633          JMP I   S7600/(7600)            /EXIT TO OS/8.
 191               /      HANDLER ENTRY POINTS.
 192               
 193               /       NOTE: ALL HANDLER ENTRY POINTS FOLLOW IN REVERSE ORDER.
 194               
 195 000245  0010  SDB3,   VERS                            /FIRST ENTRY POINT CONTAINS VERSION NUMBER.
 196 000246  2360  SDA3,   ISZ     SDCNT                   /SECOND ENTRY POINT.
 197 000247  2360  SDB2,   ISZ     SDCNT                   /THIRD ENTRY POINT.
 198 000250  2360  SDA2,   ISZ     SDCNT                   /FOURTH ENTRY POINT.
 199 000251  2360  SDB1,   ISZ     SDCNT                   /FIFTH ENTRY POINT.
 200 000252  2360  SDA1,   ISZ     SDCNT                   /SIXTH ENTRY POINT.
 201 000253  2360  SDB0,   ISZ     SDCNT                   /SEVENTH ENTRY POINT.
 202 000254  2360  SDA0,   ISZ     SDCNT                   /EIGHTH ENTRY POINT.
 203               
 204               /       AT THIS POINT, "SDCNT" HAS BEEN BUMPED 0 THROUGH 7 TIMES DEPENDING ON WHICH
 205               /       ENTRY POINT WAS USED.  WE USE THIS COUNT TO DETERMINE WHICH ENTRY WAS USED.
 206               
 207               /       THE NEXT WORD EXECUTES AS A HARMLESS "AND" INSTRUCTION TO PROVIDE PARTIAL
 208               /       PROTECTION FROM CALLS MADE FROM LOCATIONS NEAR THE END OF THE CALLING FIELD.
 209               /       WHILE THIS IS NOT FOOLPROOF, CALLS IN OS/8 ARE SELDOM MADE FROM LOCATIONS PAST
 210               /       X7600 FOR ANY FIELD X IN THE RANGE OF 0-7.
 211               
 212               /       ADDITIONALLY, "WKUP" MUST BE JUST AFTER THE ENTRY POINT CHAIN TO HELP DEFINE
 213               /       REFERENCES TO THE PROPER ENTRY POINT.
 214               
 215                       IFNZRO  SDA0+1-. <ERROR .>      /ASSEMBLES ONLY IF THE LOGIC IS BUNGLED.
 216               
 217 000255  0101  WKUP,   "A&177                          /CONSTANT 0101; ALSO HARMLESS "AND" INSTRUCTION.
 218 000256  7300          CLA CLL                         /CLEAN UP.
 219 000257  1360          TAD     SDCNT                   /GET ENTRY POINT COUNTER
 220 000260  7040          CMA                             /INVERT
 221 000261  1300          TAD     SDTAD/(TAD WKUP)        /NOW HAVE "TAD" TO THE PROPER ENTRY POINT.
 222 000262  3273          DCA     SDGET                   /STORE INLINE FOR USE LATER.
 223 000263  6405          RKIE                            /CLEAR INTERRUPTS FROM THIS DEVICE.
 224 000264  0177  S177,   177                             /CONSTANT 0177; HERE IN CASE THE PREVIOUS SKIPS.
 225 000265  7332          NL2000                          /SET AC TO "DCA" - "TAD" OFFSET.
 226 000266  1273          TAD     SDGET                   /NOW HAVE "DCA" TO THE PROPER ENTRY POINT.
 227 000267  3276          DCA     SRESTR                  /STORE INLINE TO RESTORE CALLED ENTRY POINT.
 228 000270  6214          RDF                             /GET THE CALLER'S FIELD.
 229 000271  1243          TAD     SCDI/(CIF CDF)          /TURN INTO "CIF CDF" RETURN FIELD INSTRUCTION.
 230 000272  3354          DCA     SFIELD                  /STORE INLINE FOR RETURN LATER.
 231 000273  7402  SDGET,  HLT                             /THIS IS NOW "TAD" TO THE CHOSEN ENTRY POINT.
 232 000274  3361          DCA     SDENT                   /SAVE IT TO GET THE INLINE ARGUMENTS.
 233 000275  1362          TAD     SDISZ/(ISZ SDCNT)       /GET THE NORMAL CONTENTS
 234 000276  7402  SRESTR, HLT                             /SAVE OVER THE CALLED ENTRY POINT.
 235 000277  4232          JMS     CTRLC                   /CHECK FOR CONTROL-C ABORT NOW.
 236 000300  1255  SDTAD,  TAD     WKUP/("A&177)           /GET THE DRIVE BASE CHARACTER.
 237 000301  1360          TAD     SDCNT                   /ADD OFFSET TO THE DESIRED [HALF] DRIVE.
 238 000302  4200          JMS     SENDC                   /TELL IT TO THE SERVER.
 239 000303  3360          DCA     SDCNT                   /RESET THE ENTRY COUNTER FOR NEXT TIME.
 240 000304  1761         TAD I   SDENT                   /GET THE FUNCTION WORD.
 241 000305  4206          JMS     SNDNUM                  /SEND IT TO THE SERVER.
 242 000306  2361          ISZ     SDENT                   /BUMP PAST FUNCTION WORD.
 243 000307  1761          TAD I   SDENT                   /GET THE CALLER'S BUFFER ADDRESS.
 244 000310  4206          JMS     SNDNUM                  /TELL IT TO THE SERVER [THIS COULD GO AWAY].
 245 000311  1761          TAD I   SDENT                   /GET THE CALLER'S BUFFER ADDRESS AGAIN.
 246 000312  3364          DCA     SLOC                    /STORE FOR TRANSFERS LATER.
 247 000313  2361          ISZ     SDENT                   /BUMP TO RECORD ARGUMENT.
 248 000314  1761          TAD I   SDENT                   /GET THE STARTING RECORD NUMBER.
 249 000315  4206          JMS     SNDNUM                  /SET TO SERVER.
 250 000316  2361          ISZ     SDENT                   /BUMP TO ERROR RETURN.
 251 000317  4216          JMS     GETNUM                  /GET "CDF" TO BUFFER FIELD FROM SERVER.
 252 000320  3321          DCA     .+1                     /STORE INLINE.
 253 000321  7402          HLT                             /CHANGE DATA FIELD TO USER'S BUFFER FIELD.
 254 000322  4216          JMS     GETNUM                  /GET NEGATED WORD COUNT FROM SERVER.
 255 000323  3365          DCA     WORDCT                  /STASH IT.
 256 000324  4216  GETACK, JMS     GETNUM                  /GET STATUS FROM SERVER.
 257 000325  7450          SNA                             /ARE WE DONE? [0000 IS GOOD COMPLETION CODE.]
 258 000326  5352          JMP     EXIT                    /YES, TAKE GOOD EXIT NOW.
 259 000327  7104          CLL RAL                         /MOVE UP TO LINK AND AC[0].
 260 000330  7420          SNL                             /SKIP IF READ OR WRITE.
 261 000331  5356          JMP     DSKERR                  /JUMP IF THERE WAS AN ERROR [CODE 2000].
 262 000332  7640          SZA CLA                         /SKIP IF READING [4000].
 263 000333  5343          JMP     TXLP                    /JUMP IF WE ARE WRITING [4001].
 264               
 265               /       FALLS THROUGH IF READING.  GET THE DATA FROM THE SERVER AND STORE INTO THE
 266               /       USER'S BUFFER.
 267               
 268 000334  4216  RXLP,   JMS     GETNUM                  /GET A WORD FROM THE SERVER.
 269 000335  3764          DCA I   SLOC                    /PUT A WORD INTO THE BUFFER.
 270 000336  2364          ISZ     SLOC                    /BUMP UP THE BUFFER POINTER.
 271 000337  4232          JMS     CTRLC                   /CHECK FOR CONTROL-C [MIGHT BE SKIPPED].
 272 000340  2365          ISZ     WORDCT                  /DONE ENOUGH WORDS?
 273 000341  5334          JMP     RXLP                    /NO, KEEP GOING.
 274 000342  5324          JMP     GETACK                  /GET THE FINAL STATUS BEFORE EXITING.
 275               
 276               /       COMES HERE IF WRITING.  GET THE DATA FROM THE USER'S BUFFER AND SEND IT TO THE
 277               /       SERVER.
 278               
 279 000343  1764  TXLP,   TAD I   SLOC                    /GET A WORD FROM THE USER'S BUFFER.
 280 000344  2364          ISZ     SLOC                    /BUMP TO NEXT LOCATION.
 281 000345  7000          NOP                             /HERE IN CASE IT SKIPS.
 282 000346  4206          JMS     SNDNUM                  /SEND THE WORD TO THE SERVER.
 283 000347  2365          ISZ     WORDCT                  /DONE ENOUGH WORDS?
 284 000350  5343          JMP     TXLP                    /NO, KEEP GOING.
 285 000351  5324          JMP     GETACK                  /GET THE FINAL STATUS BEFORE EXITING.
 286               /      COMES HERE FOR SUCCESSFUL EXIT TO CALLER.
 287               
 288 000352  2361  EXIT,   ISZ     SDENT                   /BUMP TO NORMAL RETURN.
 289 000353  4232          JMS     CTRLC                   /CHECK FOR CONTROL-C ONE LAST TIME.
 290 000354  7402  SFIELD, HLT                             /THIS WILL BE "CIF CDF" TO CALLER'S FIELD.
 291 000355  5761          JMP I   SDENT                   /TAKE GOOD RETURN TO CALLER.
 292               
 293               /       COMES HERE IF THERE WAS AN ERROR.
 294               
 295 000356  7130  DSKERR, STL RAR                         /FORCE ERROR CONDITION, MOVE DOWN STATUS BITS.
 296 000357  5354          JMP     SFIELD                  /TAKE ERROR RETURN.
 297               
 298 000360  0000  SDCNT,  0                               /THIS IS USED TO DETERMINE THE ACTIVE CALLER.
 299 000361  0000  SDENT,  .-.                             /POINTER TO INLINE ARGUMENTS.
 300 000362  2360  SDISZ,  ISZ     SDCNT                   /INSTRUCTION CONSTANT NEEDED FOR RESTORATION.
 301 000363  7775  M3,     -3                              /CONSTANT 7775.
 302 000364  0000  SLOC,   .-.                             /POINTER TO USER'S BUFFER.
 303 000365  0000  WORDCT, .-.                             /WORD COUNT FOR DATA TRANSFER.
 304               
 305                       $                               /THAT'S ALL, FOLK!

BLKNUM  6260 unreferenced
CTRLC   0232
DEVCNT  0010
DSKERR  0356
EXIT    0352
GETACK  0324
GETNUM  0216
M3      0363
NL2000  7332
REC     0040
RKCC    6402
RKCF    6400 unreferenced
RKIE    6405
RKRB    6406
RKRS    6404
RKSF    6401
RSBIOT  6413 unreferenced
RTCF    6412 unreferenced
RTFL    6410 unreferenced
RTLS    6416
RTPC    6414 unreferenced
RTSF    6411
RTSK    6415 unreferenced
RXLP    0334
S177    0264
S7600   0233
SCDI    0243
SDA0    0254
SDA1    0252
SDA2    0250
SDA3    0246
SDB0    0253
SDB1    0251
SDB2    0247
SDB3    0245
SDCNT   0360
SDENT   0361
SDGET   0273
SDISZ   0362
SDTAD   0300
SEN     0041
SENDC   0200
SFIELD  0354
SLOC    0364
SNDNUM  0206
SNDTMP  0216
SRESTR  0276
TXLP    0343
VERS    0010
WKUP    0255
WORDCT  0365
